AWSTemplateFormatVersion: "2010-09-09"
Description: Builds a NAT and associated routes to support a private networking layer
Parameters:
  VpcId:
    Description: The VPC for the route table
    Type: String

  SubnetID:
    Type: String
    Description:
      SubnetId of an existing Public facing subnet in your Virtual Private
      Cloud (VPC)

  UseNATInstance:
    Description: Whether or not to provide DNS for instances
    Type: String
    AllowedValues: ["Yes", "No"]
    Default: "No"

  # RtbID:
  #   Description: The route table to attach to
  #   Type: String
  # GatewayID:
  #   Description: ID for the igw on the environment
  #   Type: String

Conditions:
  UseNATInstance: !Equals [!Ref UseNATInstance, "Yes"]
  UseNATGateway: !Equals [!Ref UseNATInstance, "No"]
Resources:
  NatGatewayEip:
    Condition: UseNATGateway
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway:
    Condition: UseNATGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - NatGatewayEip
          - AllocationId
      SubnetId:
        Ref: SubnetID

  NatInstance:
    Type: "AWS::EC2::Instance"
    Condition: UseNATInstance
    Properties:
      ImageId: ami-00d1f8201864cc10c
      InstanceType: t2.micro
      NetworkInterfaces:
        - GroupSet:
            - !Ref NatSG
          AssociatePublicIpAddress: true
          DeviceIndex: "0"
          DeleteOnTermination: true
          SubnetId: !Ref SubnetID
      Tags:
        - Key: Name
          Value: subnet-nat

  NatSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: NatInstanceSG #required
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 96.230.41.165/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 96.230.41.165/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 96.230.41.165/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: nat-security-group

  PrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${AWS::StackName}-pvt-rtb

  NatRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId:
        Fn::If: [UseNATInstance, !Ref NatInstance, !Ref AWS::NoValue]
      GatewayId:
        Fn::If: [UseNATGateway, !Ref NatGateway, !Ref AWS::NoValue]

  PrivateSubnet1RouteAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: SubnetID
