AWSTemplateFormatVersion: 2010-09-09
Description: Deploy the MGP-Build worker
Parameters:
  AMIID:
    Description: The AMI for this instance
    Type: AWS::EC2::Image::Id
    Default: ami-0f7919c33c90f5b58

  BaseVPCStackName:
    Description: The name of the base VPC for network imports
    Type: String
    Default: craft-dev

  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
    ConstraintDescription: must be a valid EC2 instance type.

Resources:
  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref AMIID
      KeyName: cert-key-e2
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          GroupSet:
            - !Ref GenericAZNLinuxWorker
          SubnetId: !ImportValue
            Fn::Sub: "${BaseVPCStackName}-PublicSubnetId1"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-worker"
      UserData:
        "Fn::Base64": |
          #!/bin/bash -xe
          # Ensure AWS CFN Bootstrap is the latest
          yum update -y aws-cfn-bootstrap # good practice - always do this.
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --configsets builder --region ${AWS::Region}
          sudo yum update -y

    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          builder:
            - "configure_cfn"
            - "install_resources"
        configure_cfn:
          files:
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.EC2.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --configsets install_resources --region ${AWS::Region}
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                verbose=true
                interval=5
              mode: "000400"
              owner: root
              group: root
          services:
            sysvinit:
              cfn-hup:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - "/etc/cfn/cfn-hup.conf"
                  - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
        install_resources:
          packages:
            yum:
              java-1.8.0-openjdk: []
              docker: []
          services:
            sysvinit:
              docker:
                enabled: true,
                ensureRunning: true,
  GenericAZNLinuxWorker:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId:
        Fn::ImportValue:
          Fn::Sub: ${BaseVPCStackName}-VpcId
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${AWS::StackName}-sg

Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref EC2Instance

  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt
      - EC2Instance
      - AvailabilityZone
